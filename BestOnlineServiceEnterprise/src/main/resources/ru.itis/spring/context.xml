<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbs="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <beans profile="heroku">
        <context:property-placeholder location="classpath:db/heroku.properties" system-properties-mode="ENVIRONMENT"/>
        <context:property-placeholder properties-ref="heroku_properties"/>
        <util:properties id="heroku_properties" location="classpath*:ru.itis/spring/db.properties"/>
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['jdbc:postgresql://ec2-54-228-255-234.eu-west-1.compute.amazonaws.com:5432/d8h091fdlbvf3u']}"/>
        </bean>
        <bean id="dataSourceHeroku" class="org.apache.tomcat.jdbc.pool.DataSource">
            <property name="url" value="${}"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
            <property name="driverClassName" value="org.postgresql.Driver"/>
         </bean>

        <bean id="afishaServiceHeroku" class="services.impl.AfishaServiceImpl">
            <constructor-arg ref="afishaDaoHeroku"></constructor-arg>
        </bean>
        <bean id="afishaDaoHeroku" class="dao.FilmsNamedJdbcTemplateDaoImpl">
            <constructor-arg ref="dataSourceHeroku"/>
        </bean>
    </beans>




    <beans profile="dev">
        <context:property-placeholder properties-ref="db_properties"/>
        <util:properties id="db_properties" location="classpath*:ru.itis/spring/db.properties"/>

        <bean id="afishaService" class="services.impl.AfishaServiceImpl">
            <constructor-arg ref="afishaDao"></constructor-arg>
        </bean>
        <bean id="afishaDao" class="dao.FilmsNamedJdbcTemplateDaoImpl">
            <constructor-arg ref="dataSource"/>
        </bean>
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.name}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
    </beans>

    <beans profile="test">
        <bean id="afishaServiceTest" class="services.impl.AfishaServiceImpl">
            <constructor-arg ref="filmsDaoTest"/>
        </bean>
        <bean id="filmsDaoTest" class="dao.FilmsNamedJdbcTemplateDaoImpl">
            <constructor-arg ref="testDataSource"/>
        </bean>
        <jdbs:embedded-database id="testDataSource" type="H2">
            <jdbs:script location="classpath:ru.itis.sql/poster/test/films_schema.sql"/>
            <jdbs:script location="classpath:ru.itis.sql/poster/test/films_data.sql"/>
        </jdbs:embedded-database>
    </beans>
</beans>